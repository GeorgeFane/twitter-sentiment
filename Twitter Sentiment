{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Twitter Sentiment","provenance":[],"mount_file_id":"1liYUeJhNNQ-1CPLBE6vMQExJo3FbV4Fz","authorship_tag":"ABX9TyPMFBBrqZ1WyxbsmM24tqJI"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JvY98php2v76","executionInfo":{"status":"ok","timestamp":1621012211795,"user_tz":240,"elapsed":1081,"user":{"displayName":"George Fane","photoUrl":"","userId":"11724815982020265823"}},"outputId":"5e6c907a-a501-4816-de99-702751021074"},"source":["!git clone https://github.com/GeorgeFane/twitter-nlp"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Cloning into 'twitter-nlp'...\n","remote: Enumerating objects: 43, done.\u001b[K\n","remote: Counting objects: 100% (43/43), done.\u001b[K\n","remote: Compressing objects: 100% (29/29), done.\u001b[K\n","remote: Total 43 (delta 9), reused 40 (delta 6), pack-reused 0\u001b[K\n","Unpacking objects: 100% (43/43), done.\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mwD0d6Al3bBA","executionInfo":{"status":"ok","timestamp":1621012365298,"user_tz":240,"elapsed":186,"user":{"displayName":"George Fane","photoUrl":"","userId":"11724815982020265823"}},"outputId":"1c7e8ffc-38a0-451f-dad0-3c1412593e77"},"source":["%cd /content/drive/MyDrive/Clubs/MIG/Sentiment"],"execution_count":2,"outputs":[{"output_type":"stream","text":["/content/drive/MyDrive/Clubs/MIG/Sentiment\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1pCpxYY05frS","executionInfo":{"status":"ok","timestamp":1621012922814,"user_tz":240,"elapsed":302,"user":{"displayName":"George Fane","photoUrl":"","userId":"11724815982020265823"}},"outputId":"aadc45d5-3c13-4eb9-8be0-72bb59226920"},"source":["!git remote add origin https://github.com/GeorgeFane/twitter-nlp.git"],"execution_count":23,"outputs":[{"output_type":"stream","text":["fatal: remote origin already exists.\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"CWJ4PptW5KyL","executionInfo":{"status":"ok","timestamp":1621012847461,"user_tz":240,"elapsed":337,"user":{"displayName":"George Fane","photoUrl":"","userId":"11724815982020265823"}}},"source":["!git config --global user.name \"GeorgeFane\""],"execution_count":21,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hd1aotRk3ch8","executionInfo":{"status":"ok","timestamp":1621013167425,"user_tz":240,"elapsed":484,"user":{"displayName":"George Fane","photoUrl":"","userId":"11724815982020265823"}},"outputId":"24d06e8f-10fe-4cce-c78b-b081ca2e45dd"},"source":["!git push --set-upstream origin main"],"execution_count":31,"outputs":[{"output_type":"stream","text":["fatal: could not read Username for 'https://github.com': No such device or address\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"fBySn6T6EapE"},"source":["%load_ext google.colab.data_table"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HxcnxKnC4jJl","executionInfo":{"status":"ok","timestamp":1616361855180,"user_tz":240,"elapsed":5000,"user":{"displayName":"George Fane","photoUrl":"","userId":"11724815982020265823"}},"outputId":"654c31a2-2196-4ea1-aa83-375887cf0791"},"source":["!pip install snscrape"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Collecting snscrape\n","  Downloading https://files.pythonhosted.org/packages/81/dd/4a4ec9eedd8cc85ced7c5a6a23853965195203aec825ef3f7778a0c3b69e/snscrape-0.3.4-py3-none-any.whl\n","Requirement already satisfied: requests[socks] in /usr/local/lib/python3.7/dist-packages (from snscrape) (2.23.0)\n","Requirement already satisfied: lxml in /usr/local/lib/python3.7/dist-packages (from snscrape) (4.2.6)\n","Requirement already satisfied: beautifulsoup4 in /usr/local/lib/python3.7/dist-packages (from snscrape) (4.6.3)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests[socks]->snscrape) (1.24.3)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests[socks]->snscrape) (2020.12.5)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests[socks]->snscrape) (2.10)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests[socks]->snscrape) (3.0.4)\n","Requirement already satisfied: PySocks!=1.5.7,>=1.5.6; extra == \"socks\" in /usr/local/lib/python3.7/dist-packages (from requests[socks]->snscrape) (1.7.1)\n","Installing collected packages: snscrape\n","Successfully installed snscrape-0.3.4\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":367},"id":"9iuJTvZeAKUd","executionInfo":{"status":"error","timestamp":1615746784891,"user_tz":240,"elapsed":35788,"user":{"displayName":"George Fane","photoUrl":"","userId":"11724815982020265823"}},"outputId":"3e43f3c1-04aa-45f6-a825-70e2ae8f7f8f"},"source":["import gensim.downloader\n","\n","# Load Google's pre-trained Word2Vec model.\n","model = gensim.downloader.load('word2vec-google-news-300')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[======--------------------------------------------] 13.4% 223.2/1662.8MB downloaded"],"name":"stdout"},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-37-14c8c4e1c75f>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;31m# Load Google's pre-trained Word2Vec model.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0mmodel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgensim\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdownloader\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mload\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'word2vec-google-news-300'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/gensim/downloader.py\u001b[0m in \u001b[0;36mload\u001b[0;34m(name, return_path)\u001b[0m\n\u001b[1;32m    415\u001b[0m     \u001b[0mpath\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mos\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpath\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mjoin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfolder_dir\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfile_name\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    416\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mos\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpath\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexists\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfolder_dir\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 417\u001b[0;31m         \u001b[0m_download\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    418\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    419\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mreturn_path\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/gensim/downloader.py\u001b[0m in \u001b[0;36m_download\u001b[0;34m(name)\u001b[0m\n\u001b[1;32m    322\u001b[0m         \u001b[0mfname\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"{fname}.gz\"\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mformat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfname\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    323\u001b[0m         \u001b[0mdst_path\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mos\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpath\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mjoin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtmp_dir\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 324\u001b[0;31m         \u001b[0murllib\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0murlretrieve\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0murl_data\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdst_path\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreporthook\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0m_progress\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    325\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0m_calculate_md5_checksum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdst_path\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0m_get_checksum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    326\u001b[0m             \u001b[0msys\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstdout\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwrite\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"\\n\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python3.7/urllib/request.py\u001b[0m in \u001b[0;36murlretrieve\u001b[0;34m(url, filename, reporthook, data)\u001b[0m\n\u001b[1;32m    281\u001b[0m                 \u001b[0mblocknum\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    282\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0mreporthook\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 283\u001b[0;31m                     \u001b[0mreporthook\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mblocknum\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msize\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    284\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    285\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0msize\u001b[0m \u001b[0;34m>=\u001b[0m \u001b[0;36m0\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mread\u001b[0m \u001b[0;34m<\u001b[0m \u001b[0msize\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/gensim/downloader.py\u001b[0m in \u001b[0;36m_progress\u001b[0;34m(chunks_downloaded, chunk_size, total_size, part, total_parts)\u001b[0m\n\u001b[1;32m     96\u001b[0m                 round(float(total_size) / (1024 * 1024), 1))\n\u001b[1;32m     97\u001b[0m         )\n\u001b[0;32m---> 98\u001b[0;31m         \u001b[0msys\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstdout\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mflush\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     99\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    100\u001b[0m         sys.stdout.write(\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/ipykernel/iostream.py\u001b[0m in \u001b[0;36mflush\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    347\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpub_thread\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mschedule\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mevt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    348\u001b[0m                 \u001b[0;31m# and give a timeout to avoid\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 349\u001b[0;31m                 \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mevt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwait\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mflush_timeout\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    350\u001b[0m                     \u001b[0;31m# write directly to __stderr__ instead of warning because\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    351\u001b[0m                     \u001b[0;31m# if this is happening sys.stderr may be the problem.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python3.7/threading.py\u001b[0m in \u001b[0;36mwait\u001b[0;34m(self, timeout)\u001b[0m\n\u001b[1;32m    550\u001b[0m             \u001b[0msignaled\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_flag\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    551\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0msignaled\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 552\u001b[0;31m                 \u001b[0msignaled\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_cond\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwait\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtimeout\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    553\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0msignaled\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    554\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python3.7/threading.py\u001b[0m in \u001b[0;36mwait\u001b[0;34m(self, timeout)\u001b[0m\n\u001b[1;32m    298\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    299\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0mtimeout\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 300\u001b[0;31m                     \u001b[0mgotit\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mwaiter\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0macquire\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtimeout\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    301\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    302\u001b[0m                     \u001b[0mgotit\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mwaiter\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0macquire\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ggnhSrttJjFE","executionInfo":{"status":"ok","timestamp":1615749428456,"user_tz":240,"elapsed":172269,"user":{"displayName":"George Fane","photoUrl":"","userId":"11724815982020265823"}},"outputId":"25e0551e-ad78-4704-c977-90aa9986b917"},"source":["import gensim.downloader as api\n","from gensim.models import Word2Vec\n","\n","dataset = api.load(\"text8\")  # load dataset as iterable\n","model = Word2Vec(dataset)  # train w2v model"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[==================================================] 100.0% 31.6/31.6MB downloaded\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"WiapM0ij4_OZ"},"source":["import pandas as pd\n","import numpy as np\n","import json\n","from datetime import datetime, timedelta\n","from snscrape.modules.twitter import TwitterHashtagScraper\n","import re\n","from collections import Counter"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"VD6ynbMSBe-F"},"source":["def clean(tweet: str):\n","    return ' '.join(\n","        re.sub(\n","            \"(@[A-Za-z0-9]+)|([^0-9A-Za-z \\t]) |(\\w+:\\/\\/\\S+)\", \" \", tweet.lower()\n","        ).split()\n","    )"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"h7sWa-6EmJy9","executionInfo":{"status":"ok","timestamp":1615756707167,"user_tz":240,"elapsed":215,"user":{"displayName":"George Fane","photoUrl":"","userId":"11724815982020265823"}},"outputId":"a15f5169-6eb4-4f15-c2d4-3ec20c7674bc"},"source":["def format(dt: datetime):\n","    return dt.strftime('%Y-%m-%d')\n","\n","format(\n","    datetime.now()\n",")"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'2021-03-14'"]},"metadata":{"tags":[]},"execution_count":77}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Kd99yNQLrIG1","executionInfo":{"status":"ok","timestamp":1616713378535,"user_tz":240,"elapsed":6025,"user":{"displayName":"George Fane","photoUrl":"","userId":"11724815982020265823"}},"outputId":"6c82a8e9-6d25-4e9c-9d4e-0b07189c09a3"},"source":["!pip install datetime snscrape"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Collecting datetime\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/73/22/a5297f3a1f92468cc737f8ce7ba6e5f245fcfafeae810ba37bd1039ea01c/DateTime-4.3-py2.py3-none-any.whl (60kB)\n","\r\u001b[K     |█████▌                          | 10kB 12.8MB/s eta 0:00:01\r\u001b[K     |███████████                     | 20kB 13.2MB/s eta 0:00:01\r\u001b[K     |████████████████▍               | 30kB 8.5MB/s eta 0:00:01\r\u001b[K     |█████████████████████▉          | 40kB 8.1MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▎    | 51kB 4.5MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 61kB 2.9MB/s \n","\u001b[?25hCollecting snscrape\n","  Downloading https://files.pythonhosted.org/packages/81/dd/4a4ec9eedd8cc85ced7c5a6a23853965195203aec825ef3f7778a0c3b69e/snscrape-0.3.4-py3-none-any.whl\n","Requirement already satisfied: pytz in /usr/local/lib/python3.7/dist-packages (from datetime) (2018.9)\n","Collecting zope.interface\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/89/57/8a68360d697cf9159cba5ee35f2d25bdcda33883e8b5a997714a191a0b11/zope.interface-5.3.0-cp37-cp37m-manylinux2010_x86_64.whl (248kB)\n","\u001b[K     |████████████████████████████████| 256kB 7.2MB/s \n","\u001b[?25hRequirement already satisfied: requests[socks] in /usr/local/lib/python3.7/dist-packages (from snscrape) (2.23.0)\n","Requirement already satisfied: lxml in /usr/local/lib/python3.7/dist-packages (from snscrape) (4.2.6)\n","Requirement already satisfied: beautifulsoup4 in /usr/local/lib/python3.7/dist-packages (from snscrape) (4.6.3)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.7/dist-packages (from zope.interface->datetime) (54.1.2)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests[socks]->snscrape) (2.10)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests[socks]->snscrape) (1.24.3)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests[socks]->snscrape) (3.0.4)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests[socks]->snscrape) (2020.12.5)\n","Requirement already satisfied: PySocks!=1.5.7,>=1.5.6; extra == \"socks\" in /usr/local/lib/python3.7/dist-packages (from requests[socks]->snscrape) (1.7.1)\n","Installing collected packages: zope.interface, datetime, snscrape\n","Successfully installed datetime-4.3 snscrape-0.3.4 zope.interface-5.3.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"pJSoEBPdpt71"},"source":["from main import *\n","from datetime import timedelta\n","\n","get(\n","    'ba', \n","    datetime.now() - timedelta(days=1),\n","    datetime.now(),\n",")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"aetliGaM5DAG"},"source":["def get(\n","    ticker: str,\n","    since: datetime,\n","    until: datetime,\n","):\n","    query = [\n","        '$' + ticker,\n","        'lang:en',\n","        'since:' + format(since),\n","        'until:' + format(until),\n","    ]\n","\n","    # gen is a generator\n","    gen = TwitterHashtagScraper(\n","        ' '.join(query)\n","    ).get_items()\n","\n","    return [\n","        clean(x.content)\n","        for x in list(gen)\n","    ]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"HFbB3AerrQAk"},"source":["def get(ticker: str):\n","    gen = TwitterHashtagScraper(\n","        f'${ticker} + lang:en'\n","    ).get_items()\n","    return [\n","        clean(\n","            next(gen).content\n","        ) for i in range(99)\n","    ]\n","\n","def getAll(tickers: str):\n","    results = []\n","    for ticker in tickers.split():\n","        results += get(ticker)\n","    return set(results)\n","\n","results = getAll(\n","    'bb amc nok gme'\n",")\n","\n","df = pd.DataFrame({\n","    'score': [0] * len(results),\n","    'tweet': list(results)\n","})"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"vDQd9zkEtp8x"},"source":["df.to_csv('bang.txt', index=False)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":402},"id":"6M8FPqtG3T3K","executionInfo":{"status":"ok","timestamp":1616709919107,"user_tz":240,"elapsed":697,"user":{"displayName":"George Fane","photoUrl":"","userId":"11724815982020265823"}},"outputId":"2e32b460-72a8-46ec-ac75-f4f65213f2d2"},"source":["import pandas as pd\n","\n","labelled = pd.read_csv(\n","    '/content/drive/Shareddrives/NLP Twitter/data/bang.txt'\n",")\n","labelled"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>score</th>\n","      <th>tweet</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2</td>\n","      <td>get instant updates and free trials join here ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3</td>\n","      <td>advice load $nok shares and april calls</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>_afca426 do more dd your distracting the real ...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>we have done great work must continue our path...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2</td>\n","      <td>most active trading chatroom $htz $bioc $tops ...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>269</th>\n","      <td>3</td>\n","      <td>forget cash pay me in $bb 🚀🚀🚀🚀 #wsb</td>\n","    </tr>\n","    <tr>\n","      <th>270</th>\n","      <td>3</td>\n","      <td>$gme [mar-19 105 calls up +545.34 alerted at $...</td>\n","    </tr>\n","    <tr>\n","      <th>271</th>\n","      <td>3</td>\n","      <td>let’s shock everyone with a $bb short squeeze!</td>\n","    </tr>\n","    <tr>\n","      <th>272</th>\n","      <td>3</td>\n","      <td>$eeenf huge catalyst coming in the next couple...</td>\n","    </tr>\n","    <tr>\n","      <th>273</th>\n","      <td>2</td>\n","      <td>🔥our alerts are on fire when people keep their...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>274 rows × 2 columns</p>\n","</div>"],"text/plain":["     score                                              tweet\n","0        2  get instant updates and free trials join here ...\n","1        3            advice load $nok shares and april calls\n","2        1  _afca426 do more dd your distracting the real ...\n","3        3  we have done great work must continue our path...\n","4        2  most active trading chatroom $htz $bioc $tops ...\n","..     ...                                                ...\n","269      3                forget cash pay me in $bb 🚀🚀🚀🚀 #wsb\n","270      3  $gme [mar-19 105 calls up +545.34 alerted at $...\n","271      3     let’s shock everyone with a $bb short squeeze!\n","272      3  $eeenf huge catalyst coming in the next couple...\n","273      2  🔥our alerts are on fire when people keep their...\n","\n","[274 rows x 2 columns]"]},"metadata":{"tags":[]},"execution_count":2}]},{"cell_type":"code","metadata":{"id":"fdI8VRa95Dgj"},"source":["stop = lambda s: ' '.join([\n","    word\n","    for word in s.split()\n","    if word not in stopen\n","])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Q_jFyjezTee5"},"source":["mapped = [\n","    1 if x > 3 else 0\n","    for x in tespal.label\n","]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"_dnndYzDJKyT"},"source":["def transform(X):\n","    return np.array([\n","        np.mean([model[w] for w in words if w in model]\n","                or [np.zeros(self.dim)], axis=0)\n","        for words in X\n","    ])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"rOvdSRSPr4kn"},"source":["import pickle\n","\n","path = '/content/drive/MyDrive/Clubs/MIG/Sentiment/pickles/'\n","\n","with open(path + 'cv.pkl', 'rb') as f:\n","    cv = pickle.load(f)\n","with open(path + 'spam.pkl', 'rb') as f:\n","    spam = pickle.load(f)\n","with open(path + 'sentiment.pkl', 'rb') as f:\n","    sentiment = pickle.load(f)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CqzUjG61sPap","executionInfo":{"status":"ok","timestamp":1618174152142,"user_tz":240,"elapsed":207,"user":{"displayName":"George Fane","photoUrl":"","userId":"11724815982020265823"}},"outputId":"89332917-e5e8-47ad-81a3-f6fb2c6ad2fe"},"source":["from joblib import dump, load\n","dump(cv, 'cv.joblib')\n","dump(spam, 'spam.joblib')\n","dump(sentiment, 'sentiment.joblib')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['sentiment.joblib']"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"code","metadata":{"id":"gQ4z-mpNsjqQ"},"source":["cv = load('cv.joblib')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"IqAtCYs3dqCn"},"source":["import pickle\n","\n","with open('sentiment.pkl', 'wb') as f:\n","    pickle.dump(clf, f)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":402},"id":"UITkAhOF-i7S","executionInfo":{"status":"ok","timestamp":1616710007248,"user_tz":240,"elapsed":1230,"user":{"displayName":"George Fane","photoUrl":"","userId":"11724815982020265823"}},"outputId":"7feb60c3-bb28-496a-b9fc-2b5717283bc1"},"source":["slim = labelled[\n","    labelled.score != 2\n","]\n","slim"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>score</th>\n","      <th>tweet</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>3</td>\n","      <td>advice load $nok shares and april calls</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>_afca426 do more dd your distracting the real ...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>we have done great work must continue our path...</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>3</td>\n","      <td>thank you wise ape $amc</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>3</td>\n","      <td>earnings this week $gme will be interesting to...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>268</th>\n","      <td>3</td>\n","      <td>oh no #gamestop earnings this week😂 $gme $amc ...</td>\n","    </tr>\n","    <tr>\n","      <th>269</th>\n","      <td>3</td>\n","      <td>forget cash pay me in $bb 🚀🚀🚀🚀 #wsb</td>\n","    </tr>\n","    <tr>\n","      <th>270</th>\n","      <td>3</td>\n","      <td>$gme [mar-19 105 calls up +545.34 alerted at $...</td>\n","    </tr>\n","    <tr>\n","      <th>271</th>\n","      <td>3</td>\n","      <td>let’s shock everyone with a $bb short squeeze!</td>\n","    </tr>\n","    <tr>\n","      <th>272</th>\n","      <td>3</td>\n","      <td>$eeenf huge catalyst coming in the next couple...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>187 rows × 2 columns</p>\n","</div>"],"text/plain":["     score                                              tweet\n","1        3            advice load $nok shares and april calls\n","2        1  _afca426 do more dd your distracting the real ...\n","3        3  we have done great work must continue our path...\n","6        3                            thank you wise ape $amc\n","8        3  earnings this week $gme will be interesting to...\n","..     ...                                                ...\n","268      3  oh no #gamestop earnings this week😂 $gme $amc ...\n","269      3                forget cash pay me in $bb 🚀🚀🚀🚀 #wsb\n","270      3  $gme [mar-19 105 calls up +545.34 alerted at $...\n","271      3     let’s shock everyone with a $bb short squeeze!\n","272      3  $eeenf huge catalyst coming in the next couple...\n","\n","[187 rows x 2 columns]"]},"metadata":{"tags":[]},"execution_count":21}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"id":"xRXf5MUKbEXt","executionInfo":{"status":"error","timestamp":1618174030590,"user_tz":240,"elapsed":1457,"user":{"displayName":"George Fane","photoUrl":"","userId":"11724815982020265823"}},"outputId":"c3ed37e5-1819-44b1-d73f-ad9e72d9cff3"},"source":["from sklearn.feature_extraction.text import CountVectorizer\n","from sklearn.model_selection import train_test_split\n","from sklearn.naive_bayes import MultinomialNB\n","from sklearn.metrics import classification_report\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.ensemble import RandomForestClassifier\n","\n","x = labelled.tweet\n","y = labelled.score == 2\n","cv = CountVectorizer(stop_words='english')\n","X = cv.fit_transform(x) # Fit the Data\n","X_train, X_test, y_train, y_test = train_test_split(X, y)\n","#Naive Bayes Classifier\n","clf = MultinomialNB()\n","clf.fit(X_train,y_train)\n","clf.score(X_test,y_test)\n","y_pred = clf.predict(X_test)\n","print(classification_report(y_test, y_pred))"],"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-6e198c780df8>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0msklearn\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mensemble\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mRandomForestClassifier\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m \u001b[0mx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlabelled\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtweet\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      9\u001b[0m \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlabelled\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mscore\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;36m2\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0mcv\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mCountVectorizer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstop_words\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'english'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'labelled' is not defined"]}]},{"cell_type":"code","metadata":{"id":"nba8k7NsrYSs"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"i9ekQc3uGJ48","executionInfo":{"status":"ok","timestamp":1616714318909,"user_tz":240,"elapsed":197,"user":{"displayName":"George Fane","photoUrl":"","userId":"11724815982020265823"}},"outputId":"898ff163-7a3a-4553-f1e9-2d08f5f411d0"},"source":["x = slim.tweet\n","y = slim.score\n","X = cv.transform(x) # Fit the Data\n","X_train, X_test, y_train, y_test = train_test_split(X, y)\n","#Naive Bayes Classifier\n","clf = MultinomialNB()\n","clf.fit(X_train,y_train)\n","clf.score(X_test,y_test)\n","y_pred = clf.predict(X_test)\n","print(classification_report(y_test, y_pred))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           1       0.62      0.56      0.59         9\n","           3       0.90      0.92      0.91        38\n","\n","    accuracy                           0.85        47\n","   macro avg       0.76      0.74      0.75        47\n","weighted avg       0.85      0.85      0.85        47\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oqvQy09FibHY","executionInfo":{"status":"ok","timestamp":1616711976645,"user_tz":240,"elapsed":223,"user":{"displayName":"George Fane","photoUrl":"","userId":"11724815982020265823"}},"outputId":"798be299-4c4c-4cd4-fb35-82f4167a5b34"},"source":["X_test"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<47x1418 sparse matrix of type '<class 'numpy.int64'>'\n","\twith 679 stored elements in Compressed Sparse Row format>"]},"metadata":{"tags":[]},"execution_count":88}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XR1hMhVdXqI4","executionInfo":{"status":"ok","timestamp":1615702062318,"user_tz":300,"elapsed":2999,"user":{"displayName":"George Fane","photoUrl":"","userId":"11724815982020265823"}},"outputId":"bf852587-c940-47eb-ed99-06334c03460b"},"source":["X_train, X_test, y_train, y_test = train_test_split(\n","    jagged,\n","    mapped, \n",")\n","train = list(\n","    zip(\n","        X_train, y_train\n","    )\n",")\n","test = list(\n","    zip(\n","        X_test, y_test\n","    )\n",")\n","\n","cl = nbc(train)\n","cl.accuracy(test)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.5887850467289719"]},"metadata":{"tags":[]},"execution_count":97}]},{"cell_type":"code","metadata":{"id":"eh49zAIlc0JK"},"source":["from nltk import classify\n","from nltk import NaiveBayesClassifier\n","classifier = NaiveBayesClassifier.train(train)\n","\n","print(\"Accuracy is:\", classify.accuracy(classifier, test))\n","\n","print(classifier.show_most_informative_features(10))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":308},"id":"tALj4rUPqpmy","executionInfo":{"status":"error","timestamp":1616714409399,"user_tz":240,"elapsed":520,"user":{"displayName":"George Fane","photoUrl":"","userId":"11724815982020265823"}},"outputId":"c5a3f5d2-c592-4652-d574-92c439ac9942"},"source":["from math import mean"],"execution_count":null,"outputs":[{"output_type":"error","ename":"ImportError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mImportError\u001b[0m                               Traceback (most recent call last)","\u001b[0;32m<ipython-input-160-1e10bcf29021>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mmath\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mmean\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mImportError\u001b[0m: cannot import name 'mean' from 'math' (unknown location)","","\u001b[0;31m---------------------------------------------------------------------------\u001b[0;32m\nNOTE: If your import is failing due to a missing package, you can\nmanually install dependencies using either !pip or !apt.\n\nTo view examples of installing some common dependencies, click the\n\"Open Examples\" button below.\n\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"id":"V1xrPr0Zn73s","executionInfo":{"status":"error","timestamp":1617831856243,"user_tz":240,"elapsed":1397,"user":{"displayName":"George Fane","photoUrl":"","userId":"11724815982020265823"}},"outputId":"6997d300-89e8-494e-e5a1-e3d8b5e85e1d"},"source":["import pickle\n","\n","with open('cv.pkl', 'rb') as f:\n","    cv = pickle.load(f)\n","with open('spam.pkl', 'rb') as f:\n","    spam = pickle.load(f)\n","with open('sentiment.pkl', 'rb') as f:\n","    sentiment = pickle.load(f)\n","\n","tweetsTF = cv.transform(results) # Fit the Data\n","spamScore = spam.predict(tweetsTF)\n","nonspam = [\n","    tweet\n","    for tweet, score in zip(tweets, spamScore)\n","    if score != 1\n","]\n","\n","nonspamTF = cv.transform(nonspam)\n","sentimentScore = sentiment.predict(nonspamTF)\n","\n","# sentimentScore is either 1 or 3\n","np.mean(sentimentScore) - 2"],"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-3-677de9c93862>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      8\u001b[0m     \u001b[0msentiment\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpickle\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mload\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 10\u001b[0;31m \u001b[0mtweetsTF\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcv\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtransform\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresults\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m# Fit the Data\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     11\u001b[0m \u001b[0mspamScore\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mspam\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtweetsTF\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     12\u001b[0m nonspam = [\n","\u001b[0;31mNameError\u001b[0m: name 'results' is not defined"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PnrA0AdRqF6e","executionInfo":{"status":"ok","timestamp":1616713903774,"user_tz":240,"elapsed":287,"user":{"displayName":"George Fane","photoUrl":"","userId":"11724815982020265823"}},"outputId":"8b3993c7-66f9-4d31-d607-0f112234615e"},"source":["tweetsTF"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<316x2044 sparse matrix of type '<class 'numpy.int64'>'\n","\twith 5198 stored elements in Compressed Sparse Row format>"]},"metadata":{"tags":[]},"execution_count":106}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ftfXJ5JWqKx8","executionInfo":{"status":"ok","timestamp":1616713922308,"user_tz":240,"elapsed":299,"user":{"displayName":"George Fane","photoUrl":"","userId":"11724815982020265823"}},"outputId":"88fc5990-0ca6-4731-e342-4ab992baee28"},"source":["X"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<187x1418 sparse matrix of type '<class 'numpy.int64'>'\n","\twith 2791 stored elements in Compressed Sparse Row format>"]},"metadata":{"tags":[]},"execution_count":107}]}]}